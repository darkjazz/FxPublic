{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset238 Inconsolata;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 (\
~world = \cf3 Array\cf2 .fill(19, \{ \
	(state: 0.0, lastState: 0.0) \
\});\
\
~world[9] = (state: 1.0, lastState: 1.0);\
\
~add = 0.05;\
\
~next = \{\
	~world.do(\{\cf3 |cell, i|\cf2 \
		cell.lastState = cell.state;\
	\});\
	~world.do(\{\cf3 |cell, i|\cf2 \
		\cf3 var\cf2  avg;\
		avg = ~world.wrapAt(i-1).lastState + cell.lastState + ~world.wrapAt(i+1).lastState / 3;\
		avg = avg + ~add;\
		if (avg > 1) \{ avg = avg - 1 \};\
		cell.state = avg;\
	\})	\
\};\
\
~yind = 0;\
~size = 25;\
\
w = \cf3 Window\cf2 (\cf4 "...one-d..."\cf2 , \cf3 Rect\cf2 (20, 20, 520, 530)).front;\
v = \cf3 UserView\cf2 (w, w.bounds);\
v.clearOnRefresh_(\cf3 false\cf2 );\
v.drawFunc = \{\
	~world.do(\{\cf3 |cell, i|\cf2 \
		\cf3 Pen\cf2 .color = \cf3 Color\cf2 .grey(cell.state);\
		\cf3 Pen\cf2 .fillRect(\cf3 Rect\cf2 (i * ~size + 5, ~yind * ~size + 5, ~size, ~size));\
		\cf3 Pen\cf2 .color = \cf3 Color\cf2 .grey(1 - cell.state);\
		\cf3 Pen\cf2 .stringInRect(cell.state.round(0.1).asString, \
			\cf3 Rect\cf2 (i * ~size + 7, ~yind * ~size + 7, ~size-2, ~size-2 ))\
	\});		\
\};\
)\
\
(\
\cf3 Routine\cf2 (\{\
	19.do(\{\cf3 |i|\cf2 \
		~next.value;\
		~yind = i + 1;\
		\{ w.refresh \}.defer;\
		0.5.wait\
	\})\
\}).play\
)\
\
(\
\cf5 //~world = Array.fill(60, \{ (state: 0.0, lastState: 0.0) \});\cf2 \
\
~world = \cf3 Array\cf2 .fill(60, \{ (state: rrand(0.0, 1.0), lastState: 0.0) \});\
\
~world[29] = (state: 1.0, lastState: 1.0);\
\
~add = 0.05;\
\
~next = \{\
	~world.do(\{\cf3 |cell, i|\cf2 \
		cell.lastState = cell.state;\
	\});\
	~world.do(\{\cf3 |cell, i|\cf2 \
		\cf3 var\cf2  avg;\
		avg = ~world.wrapAt(i-1).lastState + cell.lastState + ~world.wrapAt(i+1).lastState / 3;\
		avg = avg + ~add;\
		cell.state = avg.wrap(0.0, 1.0);\
	\})	\
\};\
\
~yind = 0;\
~size = 7;\
\
w = \cf3 Window\cf2 (\cf4 "...one d..."\cf2 , \cf3 Rect\cf2 (20, 20, 520, 530)).front;\
v = \cf3 UserView\cf2 (w, w.bounds);\
v.clearOnRefresh_(\cf3 false\cf2 );\
v.drawFunc = \{\
	~world.do(\{\cf3 |cell, i|\cf2 \
		\cf3 Pen\cf2 .color = \cf3 Color\cf2 .grey(cell.state);\
		\cf3 Pen\cf2 .fillRect(\cf3 Rect\cf2 (i * ~size + 5, ~yind * ~size + 5, ~size, ~size));\
	\});		\
\};\
)\
\
(\
\cf3 Routine\cf2 (\{\
	60.do(\{\cf3 |i|\cf2 \
		~next.value;\
		~yind = i + 1;\
		\{ w.refresh \}.defer;\
		0.25.wait\
	\})\
\}).play\
)\
\
(\
\cf5 //~world = Array.fill(60, \{ (state: 0.0, lastState: 0.0) \});\cf2 \
\
~world = \cf3 Array\cf2 .fill(60, \{ (state: rrand(0.0, 1.0), lastState: 0.0) \});\
\
~world[29] = (state: 1.0, lastState: 1.0);\
\
~add = 0.95;\
\
~weights = [1, 2, 3];\
\
~next = \{\
	~world.do(\{\cf3 |cell, i|\cf2 \
		cell.lastState = cell.state;\
	\});\
	~world.do(\{\cf3 |cell, i|\cf2 \
		\cf3 var\cf2  avg;\
		avg = ([~world.wrapAt(i-1).lastState, cell.lastState, ~world.wrapAt(i+1).lastState] *\
			~weights).sum / ~weights.sum;\
		avg = avg + ~add;\
		cell.state = avg.wrap(0.0, 1.0);\
	\})	\
\};\
\
~yind = 0;\
~size = 7;\
\
w = \cf3 Window\cf2 (\cf4 "...one d..."\cf2 , \cf3 Rect\cf2 (20, 20, 520, 530)).front;\
v = \cf3 UserView\cf2 (w, w.bounds);\
v.clearOnRefresh_(\cf3 false\cf2 );\
v.drawFunc = \{\
	~world.do(\{\cf3 |cell, i|\cf2 \
		\cf3 Pen\cf2 .color = \cf3 Color\cf2 .grey(cell.state);\
		\cf3 Pen\cf2 .fillRect(\cf3 Rect\cf2 (i * ~size + 5, ~yind * ~size + 5, ~size, ~size));\
	\});		\
\};\
)\
\
(\
\cf3 Routine\cf2 (\{\
	60.do(\{\cf3 |i|\cf2 \
		~next.value;\
		~yind = i + 1;\
		\{ w.refresh \}.defer;\
		0.25.wait\
	\})\
\}).play\
)}